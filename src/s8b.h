#ifndef s8b_h
#define s8b_h

typedef struct S8bWord {
    unsigned int selector : 4;
    unsigned long long values: 60;
} S8bWord;

typedef struct {
    S8bWord* compressed_indices;
    int_fast64_t nz;
    int_fast64_t nwords;
} S8bCol;

const static char item_width[16] = { 0, 0, 1, 2, 3, 4, 5, 6,
    7, 8, 10, 12, 15, 20, 30, 60 };
const static unsigned char group_size[16] = { 240, 120, 60, 30, 20, 15, 12, 10,
    8, 7, 6, 5, 4, 3, 2, 1 };
const static int_fast64_t masks[16] = { 0,
    0,
    (1 << 1) - 1,
    (1 << 2) - 1,
    (1 << 3) - 1,
    (1 << 4) - 1,
    (1 << 5) - 1,
    (1 << 6) - 1,
    (1 << 7) - 1,
    (1 << 8) - 1,
    (1 << 10) - 1,
    (1 << 12) - 1,
    (1 << 15) - 1,
    (1 << 20) - 1,
    (1 << 30) - 1,
    ((long)1 << 60) - 1 };
const static unsigned short max_size_given_entries[61] = {60,30,20,15,12,10,8,7,6,6, 5, 5, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,0};
const static unsigned short selector_given_count[241] = {15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 7, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

S8bWord to_s8b(int_fast64_t count, int_fast64_t* vals);
S8bCol col_to_s8b_col(int_fast64_t size, int_fast64_t* col);

#endif